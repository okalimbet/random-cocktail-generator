[{"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/index.js":"1","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/reportWebVitals.js":"2","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/App/index.js":"3","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/apiCalls.js":"4","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/RecipePage/index.js":"5","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/FavoritePage/index.js":"6","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/WelcomePage/index.js":"7"},{"size":555,"mtime":1610730681103,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610672692578,"results":"10","hashOfConfig":"9"},{"size":1632,"mtime":1610905548288,"results":"11","hashOfConfig":"9"},{"size":407,"mtime":1610905548295,"results":"12","hashOfConfig":"9"},{"size":3895,"mtime":1610905548291,"results":"13","hashOfConfig":"9"},{"size":2132,"mtime":1610905548290,"results":"14","hashOfConfig":"9"},{"size":575,"mtime":1610908164511,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1rpnamh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/index.js",[],["33","34"],"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/reportWebVitals.js",[],"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/App/index.js",["35"],"import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport './App.scss';\nimport { apiCalls } from \"../../apiCalls\";\nimport RecipePage from \"../RecipePage\";\nimport FavoritePage from \"../FavoritePage\";\nimport WelcomePage from \"../WelcomePage\";\n\nconst App = () => {\n  const [cocktailRandom, setCocktailRandom] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n\n  const getInfo = () => {\n    Promise.resolve(apiCalls.getRandomCocktail())\n      .then((data) => {\n        setCocktailRandom(data.drinks[0])\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  const addFavoriteRecipes = (id) => {\n      const isDuplicate = favoriteRecipes.find(recipe => {\n      return recipe.idDrink === id\n    })\n    if(!isDuplicate) {\n      setFavoriteRecipes([...favoriteRecipes, cocktailRandom])\n    }\n  }\n\n  useEffect(() => getInfo(), []);\n  \n  return (\n    <main className=\"App\">\n      <Route \n        exact path=\"/\" \n        component={WelcomePage} \n      />\n      {cocktailRandom && \n        <Route\n          exact path=\"/recipe\" \n          render={() => (\n            <RecipePage\n              randomRecipe={cocktailRandom}\n              addFavoriteRecipes={addFavoriteRecipes}\n              getInfo={getInfo}\n            /> \n          )}\n        />\n      }\n      {favoriteRecipes && \n        <Route\n          exact path=\"/favorites\" \n          render={() => (\n            <FavoritePage\n              favoriteRecipes={favoriteRecipes}\n            /> \n          )}\n        />\n      }\n    </main>\n  )\n}\n\nexport default App;\n","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/apiCalls.js",[],"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/RecipePage/index.js",["36","37"],"import React, { useState, useEffect } from \"react\";\nimport './RecipePage.scss';\nimport { apiCalls } from \"../../apiCalls\";\nimport { Link } from 'react-router-dom'\nimport rightButton from \"../../Assets/right-button.png\";\nimport favButton from \"../../Assets/favorite-button.png\";\n\n\nconst RecipePage = ({ randomRecipe, addFavoriteRecipes, getInfo }) => {\n  const { \n    idDrink, \n    strCategory, \n    strDrink, \n    strDrinkThumb, \n    strGlass,\n    strInstructions\n  } = randomRecipe;\n  \n  const [ingredientsAll, setIngredientsAll] = useState([]);\n  const [measuresAll, setMeasuresAll] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const ingredientItem = 'strIngredient';\n  const measureItem = 'strMeasure'\n  \n  const sortingRecipeByItems = (cocktail, itemName) => {\n    const cocktailData = Object.entries(cocktail)\n    const items = cocktailData\n      .reduce((items, item) => {\n        if(item[0].includes(itemName)) {\n          items.push(item[1])\n        }\n        return items;\n        },[])\n      .filter(item => item !== null);\n    return items;\n  }\n\n  const handleClick = () => {\n    // setIsFavorite(true);\n    addFavoriteRecipes(idDrink);\n    console.log(idDrink)\n  }\n\n  const getAllIngredientsMeasures = () => {\n    const ingredients = sortingRecipeByItems(randomRecipe, ingredientItem);\n    const measures = sortingRecipeByItems(randomRecipe, measureItem);\n    setIngredientsAll(ingredients);\n    setMeasuresAll(measures)\n  }\n\n  useEffect(() => getAllIngredientsMeasures(), [ingredientsAll]);\n  // useEffect\n\n  return (\n    <section key={idDrink} className=\"recipe-view\" data-testid={`recipe-view-${idDrink}`}> \n      <div className=\"nav-container\">\n        <div className=\"titles-container\">\n          <h1 className=\"title-main\">Recipe</h1>\n          <h2 className=\"title-drink-name\">{strDrink}</h2>\n          <button onClick={getInfo} className=\"button-generate\">Not a Vibe!</button>\n        </div>\n        <Link to=\"/favorites\" className=\"link-redirect\">\n          <h3 className=\"title-redirect\">Go to my favorites</h3>\n          <img className=\"image-redirect\" src={rightButton}/>\n        </Link>\n      </div>\n      <section className=\"sides-container\">\n        <section className=\"left-side\">\n          <img className=\"image-drink\" src={strDrinkThumb}/>\n          <h3 className=\"title-secondary\">Ingredients</h3>\n          <ul className=\"list-ingredients\">\n            {\n              ingredientsAll.map((ingredient, index) => {\n                if(ingredient && measuresAll[index]) {\n                  return (\n                    <li className=\"ingredient\">{ingredient.toLowerCase()} - {measuresAll[index].toLowerCase()}</li>\n                  )\n                } else {\n                  <li className=\"ingredient\">{ingredient.toLowerCase()}</li>\n                }\n              })\n            }\n          </ul>\n        </section>\n        <section className=\"right-side\">\n            <h3 className=\"title-secondary\">Instructions</h3>\n            <div className=\"recipe-details-container\">\n              <p className=\"recipe-detail\">{strCategory}</p>\n              <p className=\"recipe-detail\">{strGlass}</p>\n              <p className=\"recipe-detail\">{strInstructions}</p>\n            </div>\n            <button \n              onClick={handleClick} className=\"button-favorite-wrapper\"\n              disabled={isFavorite ? true : false}\n              >\n              <img className=\"button-favorite\" src={favButton}/>\n            </button>\n        </section>\n      </section>\n    </section>\n  )\n  \n}\n\nexport default RecipePage;","/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/FavoritePage/index.js",[],"/Users/olgamorgan/turing/3module/projects/final-project/random-coctail-generator/src/Components/WelcomePage/index.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":11,"column":10,"nodeType":"44","messageId":"45","endLine":11,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":47,"column":48,"nodeType":"48","endLine":47,"endColumn":62,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":68,"column":78,"nodeType":"52","messageId":"53","endLine":68,"endColumn":80},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllIngredientsMeasures'. Either include it or remove the dependency array.","ArrayExpression",["56"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [getAllIngredientsMeasures, randomRecipe]",{"range":"59","text":"60"},[1420,1434],"[getAllIngredientsMeasures, randomRecipe]"]